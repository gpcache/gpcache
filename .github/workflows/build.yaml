name: Build
on:
  push:
  pull_request:

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  VERBOSE: 1
  #CMAKE_GENERATOR: Ninja

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-18.04
            compiler: gcc
            compiler_version: "10"
            build_type: "Debug"

          - os: ubuntu-20.04
            compiler: gcc
            compiler_version: "10"
            build_type: "Debug"

          - os: ubuntu-18.04
            compiler: clang
            compiler_version: "10"
            build_type: "Debug"

          - os: ubuntu-20.04
            compiler: clang
            compiler_version: "11"
            build_type: "Debug"


    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update

          # Ubuntu 18 requires python3-setuptools and build-essential/linux-libc-dev
          packages="ninja-build pkg-config python3 python3-setuptools build-essential linux-libc-dev"

          if [ "${{ matrix.config.compiler }}" = "gcc" ]; then
            echo "CC=gcc-${{ matrix.config.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.config.compiler_version }}" >> $GITHUB_ENV

            packages="$packages g++-${{ matrix.config.compiler_version }}"
          else
            echo "CC=clang-${{ matrix.config.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.config.compiler_version }}" >> $GITHUB_ENV

            packages="$packages clang-${{ matrix.config.compiler_version }}"
          fi
          sudo apt install -y $packages

          
          # alternative: conan_package_tools
          # why --upgrade?
          pip3 install --upgrade conan

      - name: Get source
        uses: actions/checkout@v2

      - name: Conan Install
        run: |
          mkdir build
          cd build
          if [ "${{ matrix.config.compiler }}" = "gcc" ]; then
            conan profile new default --detect
            conan profile update settings.compiler.libcxx=libstdc++11 default
          fi
          conan install .. \
            --settings build_type=${{ matrix.config.build_type }} \
            --settings compiler=${{ matrix.config.compiler }} \
            --settings compiler.version=${{ matrix.config.compiler_version }} \
            --settings compiler.cppstd=20 \
            --build missing \
            --build outdated

      - name: Build
        run: |
          cd build
          conan build ..
